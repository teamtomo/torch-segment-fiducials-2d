{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>torch-segment-fiducials-2d contains a small pre-trained CNN for segmenting fiducials in cryo-EM images.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install torch-segment-fiducials-2d\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<pre><code>import tifffile\nfrom torch_segment_fiducials_2d import (\n    predict_fiducial_probabilities,  # predicts probability in range [0, 1]\n    predict_fiducial_mask            # predicts a binary mask\n)\n\n# load image and mask\nimage = tifffile.imread(\"image.tif\")\n\n# erase masked regions\nprobabilities = predict_fiducial_probabilities(image=image, pixel_spacing=8)\nmask = predict_fiducial_mask(image=image, pixel_spacing=8, probability_threshold=0.8)\n</code></pre>"},{"location":"example/","title":"Example","text":"In\u00a0[1]: Copied! <pre>from pathlib import Path\n\nimport tifffile\nimport pooch\n\nfrom torch_segment_fiducials_2d import predict_fiducial_probabilities, predict_fiducial_mask\n</pre> from pathlib import Path  import tifffile import pooch  from torch_segment_fiducials_2d import predict_fiducial_probabilities, predict_fiducial_mask <pre>/Users/aburt/Projects/torch-segment-fiducials-2d/.venv/lib/python3.13/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n/Users/aburt/Projects/torch-segment-fiducials-2d/.venv/lib/python3.13/site-packages/tiler/__init__.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools&lt;81.\n  from pkg_resources import get_distribution, DistributionNotFound\n</pre> In\u00a0[2]: Copied! <pre># https://github.com/fatiando/pooch\nGOODBOY = pooch.create(\n    path=pooch.os_cache(\"torch-segment-fiducials-2d\"),\n    base_url=\"doi:10.5281/zenodo.15269648/\",\n    registry={\n        \"EMPIAR-10164_TS_01_000_0.0_image.tif\": \"md5:5ae21ea749fd7298c6991dd9f8872b44\",\n    },\n)\n\nimage_file = Path(GOODBOY.fetch(\"EMPIAR-10164_TS_01_000_0.0_image.tif\", progressbar=True))\npixel_spacing = 8\n</pre> # https://github.com/fatiando/pooch GOODBOY = pooch.create(     path=pooch.os_cache(\"torch-segment-fiducials-2d\"),     base_url=\"doi:10.5281/zenodo.15269648/\",     registry={         \"EMPIAR-10164_TS_01_000_0.0_image.tif\": \"md5:5ae21ea749fd7298c6991dd9f8872b44\",     }, )  image_file = Path(GOODBOY.fetch(\"EMPIAR-10164_TS_01_000_0.0_image.tif\", progressbar=True)) pixel_spacing = 8 In\u00a0[3]: Copied! <pre>image = tifffile.imread(image_file)\nprobabilities = predict_fiducial_probabilities(image, pixel_spacing=pixel_spacing)\nmask = predict_fiducial_mask(image, pixel_spacing=pixel_spacing, probability_threshold=0.99)\n</pre> image = tifffile.imread(image_file) probabilities = predict_fiducial_probabilities(image, pixel_spacing=pixel_spacing) mask = predict_fiducial_mask(image, pixel_spacing=pixel_spacing, probability_threshold=0.99) <pre>Lightning automatically upgraded your loaded checkpoint from v1.9.2 to v2.5.1.post0. To apply the upgrade to your files permanently, run `python -m lightning.pytorch.utilities.upgrade_checkpoint ../../../Library/Caches/fidder/fidder.ckpt`\nUsing default `ModelCheckpoint`. Consider installing `litmodels` package to enable `LitModelCheckpoint` for automatic upload to the Lightning model registry.\nGPU available: True (mps), used: True\nTPU available: False, using: 0 TPU cores\nHPU available: False, using: 0 HPUs\n</pre> <pre>Predicting DataLoader 0: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00,  3.12it/s]\n</pre> <pre>Lightning automatically upgraded your loaded checkpoint from v1.9.2 to v2.5.1.post0. To apply the upgrade to your files permanently, run `python -m lightning.pytorch.utilities.upgrade_checkpoint ../../../Library/Caches/fidder/fidder.ckpt`\nUsing default `ModelCheckpoint`. Consider installing `litmodels` package to enable `LitModelCheckpoint` for automatic upload to the Lightning model registry.\nGPU available: True (mps), used: True\nTPU available: False, using: 0 TPU cores\nHPU available: False, using: 0 HPUs\n</pre> <pre>Predicting DataLoader 0: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00,  6.94it/s]\n</pre> In\u00a0[4]: Copied! <pre>import torch\nfrom matplotlib import pyplot as plt\nfrom torch_fourier_rescale import fourier_rescale_2d\nimage_downsized = fourier_rescale_2d(torch.tensor(image), source_spacing=8, target_spacing=30)\nfig, ax = plt.subplots(ncols=3, figsize=(12, 4))\nax[0].imshow(image, cmap='gray')\nax[0].set_title(\"original image\")\nax[1].imshow(probabilities, cmap='gray')\nax[1].set_title(\"fiducial probabilities\")\nax[2].imshow(mask, cmap='gray')\nax[2].set_title(\"fiducial mask\")\nfor _ax in ax:\n    _ax.axis('off')\n</pre> import torch from matplotlib import pyplot as plt from torch_fourier_rescale import fourier_rescale_2d image_downsized = fourier_rescale_2d(torch.tensor(image), source_spacing=8, target_spacing=30) fig, ax = plt.subplots(ncols=3, figsize=(12, 4)) ax[0].imshow(image, cmap='gray') ax[0].set_title(\"original image\") ax[1].imshow(probabilities, cmap='gray') ax[1].set_title(\"fiducial probabilities\") ax[2].imshow(mask, cmap='gray') ax[2].set_title(\"fiducial mask\") for _ax in ax:     _ax.axis('off')"}]}